const fs = require('fs')
const path = require('path')
const { extractVueFiles } = require('./extract-vue-files')

function generateComponentFactory (componentRootPath) {
  // by convention, we expect to find Vue components
  // * under /src/components
  // * with a .vue extension to define a component file
  // If you'd like to use your own convention, encode it below.
  // NOTE: generating the component factory is also totally optional,
  // and it can be maintained manually if preferred.
  const imports = []
  const registrations = []
  const componentFiles = extractVueFiles(componentRootPath)
  componentFiles.forEach(componentFile => {
    if (!fs.existsSync(componentFile)) { return }
    console.debug(`Registering JSS component ${componentFile}`)
    const componentName = path.basename(componentFile, '.vue')
    const importVarName = componentName.replace(/[^\w]+/g, '')
    imports.push(`import ${importVarName} from '../components/${componentFile
      .replace(path.join(componentRootPath, '/'), '')
      .replace(/\\/g, '/')
      .replace('.vue', '')}';`)
    registrations.push(`components.set('${componentName}', ${importVarName});`)
  })
  return `/* eslint-disable */
// Do not edit this file, it is auto-generated at build time!
// See scripts/bootstrap.js to modify the generation of this file.
${imports.join('\n')}

const components = new Map();
${registrations.join('\n')}

export default function componentFactory(componentName) {
  return components.get(componentName);
};
`
}

module.exports = generateComponentFactory
